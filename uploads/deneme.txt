<div className="upload-btn-wrapper">
            <button className="btn">Upload a file</button>
            <input type="file" name="myfile" onChange={onChange}/>
          </div>
          <d> Please Select a file</d>
          {treeData.map(node => (
              <TreeNode key={node.id} node={node}/>
          ))}


function TreeNode({ node }) {
  const [isOpen, setIsOpen] = useState(false);

  const handleToggle = () => {
    setIsOpen(!isOpen);
  };
  return (
      <div>
        <div onClick={handleToggle}>{node.name}</div>
        {isOpen && node.children && (
            <ul>
              {node.children.map(childNode => (
                  <li key={childNode.id}>
                    <TreeNode node={childNode} />
                  </li>
              ))}
            </ul>
        )}
      </div>
  );
}




const [text, setText] = useState();

  const test = e => {
    console.log(e.target.files);
  };
  let fileReader;

  const onChange = e => {
    let file = e.target.files;
    fileReader = new FileReader();
    fileReader.onloadend = handleFileRead;
    fileReader.readAsText(file[0]);
  };
  const handleFileRead = e => {
    let content = fileReader.result;
    // let text = deleteLines(content, 3);
    content = cleanContent(content);
    // … do something with the 'content' …
    setText(content);
  };

  const deleteLines = (string, n = 1) => {
    console.log("remove lines");
    
  };

  const cleanContent = string => {
    string = string.replace(/^\s*[\r\n]/gm, "");
    let array = string.split(new RegExp(/[\r\n]/gm));
    console.log(array);
    array.splice(0, 3);
    array.splice(-3);
    return array.join("\n");
  };
  const treeData = [
    {
      id: 1,
      name: 'Log dosyası',
      children: [
        {
          id: 2,
          name: 'Node 2',
          children: [
            {
              id: 3,
              name: 'Node 3'
            }
          ]
        },
        {
          id: 4,
          name: 'Node 4'
        }
      ]
    },
    {
      id: 5,
      name: 'Node 5'
    }
  ];